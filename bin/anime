#!/usr/bin/env python3

from datetime import *
from icalendar import Calendar, Event
import argparse
import os
import pytz
import subprocess
import sys
import time
import unicodedata
import urllib.parse
import urllib.request

quoted_delimiter = "%01"
delimiter = urllib.parse.unquote(quoted_delimiter)
sleep_time = 60 * 60 * 12
user = "shiro51"
keywordfilename = "https://raw.githubusercontent.com/noyuno/dotfiles/master/list/anime-keyword"
keywordcachefilename = "/var/www/html/data/anime-keyword"
animeallfilename = "/var/www/html/data/animeall"
animefilename = "/var/www/html/data/anime"

def get():
    url = "http://cal.syoboi.jp/rss2.php?usr=" + user + "&" + \
        "filter=0&count=1000&days=14&" + \
        "titlefmt=%24(StTime)" + quoted_delimiter + \
        "%24(Mark)%24(MarkW)" + quoted_delimiter + \
        "%24(ShortTitle)" + quoted_delimiter + \
        "%24(Count)" + quoted_delimiter + \
        "%24(SubTitleA)" + quoted_delimiter + \
        "%24(ChName)&alt=ical"
    text = urllib.request.urlopen(url).read().decode('utf-8')
    f = open(animeallfilename, 'w')
    f.write(text)
    f.close()
    return text

def openkeywordfile():
    keywords = []
    keywordfile = None
    cache = None
    try:
        keywordfile = urllib.request.urlopen(keywordfilename).read().decode("utf-8")
        cache = open(keywordcachefilename, "w")
        cache.write(keywordfile)
        k = keywordfile.split("\n")
        for row in k:
            if row != "":
                keywords.append(row)
    except:
        raise
    finally:
        if cache is not None:
            cache.close()
    return keywords

def main():
    c = Calendar.from_ical(get())
    outcal = Calendar()
    outcal["name"] = "Anime calendar"

    keywords_failure = None
    keywords = []
    try:
        keywords = openkeywordfile()
    except Exception as e:
        keywords_failure = e

    def containskeyword(evname):
        for keyword in keywords:
            if evname.find(keyword) != -1:
                return True
        return False

    if keywords_failure is not None:
        sys.stderr.writelines(str(keywords_failure) + "\n")
        sys.stderr.flush()

    for ev in c.walk():
        if ev.name != "VEVENT":
            continue

        t = ev.get("summary").split(delimiter)
        evbegin = t[0]
        evalert = t[1]
        evtitle = t[2]
        #evsubtitle = t[3].rjust(2, " ") + " " + t[4]
        evnum = "#" + t[3]
        evsubtitle = t[4]
        evch = t[5]

        contains = containskeyword(evtitle) or containskeyword(evsubtitle)
        if contains:
            #print(evtitle)
            ev["summary"] = evalert + evch + " " + evtitle + " " + evnum + " " + evsubtitle
            outcal.add_component(ev)
    f = None
    try:
        f = open(animefilename, "wb")
        f.write(outcal.to_ical())
    finally:
        if f is not None:
            f.close()

if __name__ == '__main__':
    if len(sys.argv) == 2 and sys.argv[1] == "--debug":
        main()
    else:
        while True:
            try:
                main()
                time.sleep(sleep_time)
            except KeyboardInterrupt:
                raise
            except Exception as e:
                sys.stderr.writelines(str(e) + "\n")
                sys.stderr.flush()
                time.sleep(sleep_time)
    

